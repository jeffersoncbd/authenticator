openapi: 3.0.0
info:
  title: Authenticator
  description: >-
    Especificações da API para o back-end da aplicação "Authenticator".
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicResponse:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    Credentials:
      type: object
      properties:
        application:
          type: string
          format: uuid
          x-go-extra-tags:
            validate: required
        email:
          type: string
          format: email
          x-go-extra-tags:
            validate: required
        password:
          type: string
          format: password
          x-go-extra-tags:
            validate: required,min=8,max=32
      required:
        - application
        - email
        - password
      additionalProperties: false
    LoginResponse:
      type: object
      properties:
        feedback:
          type: string
        token:
          type: string
      required:
        - token
        - feedback
      additionalProperties: false
    UserStatus:
      type: string
      enum:
        - active
        - inactive
    NewUser:
      type: object
      properties:
        name:
          type: string
          x-go-extra-tags:
            validate: required,min=3
        email:
          type: string
          format: email
          x-go-extra-tags:
            validate: required,email
        password:
          type: string
          format: password
          x-go-extra-tags:
            validate: required,min=8,max=32
      required:
        - name
        - email
        - password
      additionalProperties: false
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        status:
          $ref: "#/components/schemas/UserStatus"
      required:
        - name
        - email
        - status
      additionalProperties: false
    PatchUserStatus:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/UserStatus"
      required:
        - status
      additionalProperties: false
    Error:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    Unauthorized:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    InternalServerError:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    Application:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        keys:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - keys
      additionalProperties: false

paths:
  /login:
    post:
      summary: Autentica usuário
      tags:
        - session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        "200":
          description: Token de autenticação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /users:
    get:
      security:
        - bearerAuth: []
      summary: Lista todos os usuários
      tags:
        - users
      responses:
        "200":
          description: Lista dos usuários cadastrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      security:
        - bearerAuth: []
      summary: Cadastra um novo usuário
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        "201":
          description: Usuário cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /users/{byEmail}:
    patch:
      security:
        - bearerAuth: []
      summary: Atualiza o status de um usuário
      tags:
        - users
      parameters:
        - in: path
          name: byEmail
          schema:
            type: string
            format: email
            x-go-extra-tags:
              validate: required,email
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchUserStatus"
      responses:
        "200":
          description: Resposta vazia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /applications:
    get:
      security:
        - bearerAuth: []
      summary: Lista todas as aplicações
      tags:
        - applications
      responses:
        "200":
          description: Lista das aplicações cadastrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
